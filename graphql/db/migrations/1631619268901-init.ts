import {MigrationInterface, QueryRunner} from "typeorm";

export class init1631619268901 implements MigrationInterface {
    name = 'init1631619268901'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "historical_balance" ("id" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "created_by_id" character varying NOT NULL, "updated_at" TIMESTAMP DEFAULT now(), "updated_by_id" character varying, "deleted_at" TIMESTAMP, "deleted_by_id" character varying, "version" integer NOT NULL, "account_id" character varying NOT NULL, "balance" numeric NOT NULL, "timestamp" numeric NOT NULL, CONSTRAINT "PK_74ac29ad0bdffb6d1281a1e17e8" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "account" ("id" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "created_by_id" character varying NOT NULL, "updated_at" TIMESTAMP DEFAULT now(), "updated_by_id" character varying, "deleted_at" TIMESTAMP, "deleted_by_id" character varying, "version" integer NOT NULL, "wallet" character varying NOT NULL, "balance" numeric NOT NULL, CONSTRAINT "PK_54115ee388cdb6d86bb4bf5b2ea" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "city" ("id" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "created_by_id" character varying NOT NULL, "updated_at" TIMESTAMP DEFAULT now(), "updated_by_id" character varying, "deleted_at" TIMESTAMP, "deleted_by_id" character varying, "version" integer NOT NULL, "city_id" integer NOT NULL, "country_id" integer NOT NULL, "name" character varying NOT NULL, CONSTRAINT "PK_b222f51ce26f7e5ca86944a6739" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "consumption" ("id" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "created_by_id" character varying NOT NULL, "updated_at" TIMESTAMP DEFAULT now(), "updated_by_id" character varying, "deleted_at" TIMESTAMP, "deleted_by_id" character varying, "version" integer NOT NULL, "contract_id" integer NOT NULL, "timestamp" integer NOT NULL, "cru" numeric, "sru" numeric, "hru" numeric, "mru" numeric, "nru" numeric, CONSTRAINT "PK_90c8f17309014e5d0f244767367" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "contract_bill_report" ("id" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "created_by_id" character varying NOT NULL, "updated_at" TIMESTAMP DEFAULT now(), "updated_by_id" character varying, "deleted_at" TIMESTAMP, "deleted_by_id" character varying, "version" integer NOT NULL, "contract_id" integer NOT NULL, "discount_received" character varying NOT NULL, "amount_billed" integer NOT NULL, "timestamp" integer NOT NULL, CONSTRAINT "PK_5b21fd81e47bddc5f1fdbc8d7ee" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "country" ("id" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "created_by_id" character varying NOT NULL, "updated_at" TIMESTAMP DEFAULT now(), "updated_by_id" character varying, "deleted_at" TIMESTAMP, "deleted_by_id" character varying, "version" integer NOT NULL, "country_id" integer NOT NULL, "code" character varying NOT NULL, "name" character varying NOT NULL, "region" character varying NOT NULL, "subregion" character varying NOT NULL, "lat" character varying, "long" character varying, CONSTRAINT "PK_bf6e37c231c4f4ea56dcd887269" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "twin" ("id" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "created_by_id" character varying NOT NULL, "updated_at" TIMESTAMP DEFAULT now(), "updated_by_id" character varying, "deleted_at" TIMESTAMP, "deleted_by_id" character varying, "version" integer NOT NULL, "grid_version" integer NOT NULL, "twin_id" integer NOT NULL, "account_id" character varying NOT NULL, "ip" character varying NOT NULL, CONSTRAINT "PK_18457170fa91d0a787d9f635d7c" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "entity_proof" ("id" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "created_by_id" character varying NOT NULL, "updated_at" TIMESTAMP DEFAULT now(), "updated_by_id" character varying, "deleted_at" TIMESTAMP, "deleted_by_id" character varying, "version" integer NOT NULL, "entity_id" integer NOT NULL, "signature" character varying NOT NULL, "twin_rel_id" character varying NOT NULL, CONSTRAINT "PK_b55dee5f461106682013d0beef8" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "entity" ("id" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "created_by_id" character varying NOT NULL, "updated_at" TIMESTAMP DEFAULT now(), "updated_by_id" character varying, "deleted_at" TIMESTAMP, "deleted_by_id" character varying, "version" integer NOT NULL, "grid_version" integer NOT NULL, "entity_id" integer NOT NULL, "name" character varying NOT NULL, "country" character varying, "city" character varying, "account_id" character varying NOT NULL, CONSTRAINT "PK_50a7741b415bc585fcf9c984332" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "public_ip" ("id" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "created_by_id" character varying NOT NULL, "updated_at" TIMESTAMP DEFAULT now(), "updated_by_id" character varying, "deleted_at" TIMESTAMP, "deleted_by_id" character varying, "version" integer NOT NULL, "farm_id" character varying NOT NULL, "gateway" character varying NOT NULL, "ip" character varying NOT NULL, "contract_id" integer NOT NULL, CONSTRAINT "PK_f170b0b519632730f41d2ef78f4" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "farm" ("id" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "created_by_id" character varying NOT NULL, "updated_at" TIMESTAMP DEFAULT now(), "updated_by_id" character varying, "deleted_at" TIMESTAMP, "deleted_by_id" character varying, "version" integer NOT NULL, "grid_version" integer NOT NULL, "farm_id" integer NOT NULL, "name" character varying NOT NULL, "twin_id" integer NOT NULL, "pricing_policy_id" integer NOT NULL, "certification_type" character varying NOT NULL, "stellar_address" character varying, CONSTRAINT "PK_3bf246b27a3b6678dfc0b7a3f64" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "farming_policy" ("id" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "created_by_id" character varying NOT NULL, "updated_at" TIMESTAMP DEFAULT now(), "updated_by_id" character varying, "deleted_at" TIMESTAMP, "deleted_by_id" character varying, "version" integer NOT NULL, "grid_version" integer NOT NULL, "farming_policy_id" integer NOT NULL, "name" character varying NOT NULL, "cu" integer NOT NULL, "su" integer NOT NULL, "nu" integer NOT NULL, "ipv4" integer NOT NULL, "timestamp" integer NOT NULL, "certification_type" character varying NOT NULL, CONSTRAINT "PK_5d2ec9534104f44e4d989c4e82f" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "public_config" ("id" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "created_by_id" character varying NOT NULL, "updated_at" TIMESTAMP DEFAULT now(), "updated_by_id" character varying, "deleted_at" TIMESTAMP, "deleted_by_id" character varying, "version" integer NOT NULL, "ipv4" character varying NOT NULL, "ipv6" character varying NOT NULL, "gw4" character varying NOT NULL, "gw6" character varying NOT NULL, "domain" character varying NOT NULL, CONSTRAINT "PK_7839f7dd8f45e37933fb3e35cbb" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "node" ("id" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "created_by_id" character varying NOT NULL, "updated_at" TIMESTAMP DEFAULT now(), "updated_by_id" character varying, "deleted_at" TIMESTAMP, "deleted_by_id" character varying, "version" integer NOT NULL, "grid_version" integer NOT NULL, "node_id" integer NOT NULL, "farm_id" integer NOT NULL, "twin_id" integer NOT NULL, "location_id" character varying NOT NULL, "country" character varying, "city" character varying, "hru" numeric, "sru" numeric, "cru" numeric, "mru" numeric, "public_config_id" character varying, "uptime" integer, "created" integer NOT NULL, "farming_policy_id" integer NOT NULL, CONSTRAINT "PK_8c8caf5f29d25264abe9eaf94dd" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "location" ("id" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "created_by_id" character varying NOT NULL, "updated_at" TIMESTAMP DEFAULT now(), "updated_by_id" character varying, "deleted_at" TIMESTAMP, "deleted_by_id" character varying, "version" integer NOT NULL, "longitude" character varying NOT NULL, "latitude" character varying NOT NULL, CONSTRAINT "PK_876d7bdba03c72251ec4c2dc827" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "name_contract" ("id" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "created_by_id" character varying NOT NULL, "updated_at" TIMESTAMP DEFAULT now(), "updated_by_id" character varying, "deleted_at" TIMESTAMP, "deleted_by_id" character varying, "version" integer NOT NULL, "contract_id" integer NOT NULL, "twin_id" integer NOT NULL, "name" character varying NOT NULL, "state" character varying NOT NULL, CONSTRAINT "PK_7b4cd056bbb83602d211996360f" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "node_contract" ("id" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "created_by_id" character varying NOT NULL, "updated_at" TIMESTAMP DEFAULT now(), "updated_by_id" character varying, "deleted_at" TIMESTAMP, "deleted_by_id" character varying, "version" integer NOT NULL, "contract_id" integer NOT NULL, "twin_id" integer NOT NULL, "node_id" integer NOT NULL, "deployment_data" character varying NOT NULL, "deployment_hash" character varying NOT NULL, "number_of_public_i_ps" integer NOT NULL, "state" character varying NOT NULL, CONSTRAINT "PK_a5f90b17f504ffcd79d1f66574a" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "pricing_policy" ("id" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "created_by_id" character varying NOT NULL, "updated_at" TIMESTAMP DEFAULT now(), "updated_by_id" character varying, "deleted_at" TIMESTAMP, "deleted_by_id" character varying, "version" integer NOT NULL, "grid_version" integer NOT NULL, "pricing_policy_id" integer NOT NULL, "name" character varying NOT NULL, "su_id" character varying NOT NULL, "cu_id" character varying NOT NULL, "nu_id" character varying NOT NULL, "ipu_id" character varying NOT NULL, "foundation_account" character varying NOT NULL, "certified_sales_account" character varying NOT NULL, CONSTRAINT "PK_78105eb11bd75fd76a23bbc9bb1" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "policy" ("id" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "created_by_id" character varying NOT NULL, "updated_at" TIMESTAMP DEFAULT now(), "updated_by_id" character varying, "deleted_at" TIMESTAMP, "deleted_by_id" character varying, "version" integer NOT NULL, "value" integer NOT NULL, "unit" character varying NOT NULL, CONSTRAINT "PK_9917b0c5e4286703cc656b1d39f" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "uptime_event" ("id" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "created_by_id" character varying NOT NULL, "updated_at" TIMESTAMP DEFAULT now(), "updated_by_id" character varying, "deleted_at" TIMESTAMP, "deleted_by_id" character varying, "version" integer NOT NULL, "node_id" integer NOT NULL, "uptime" integer NOT NULL, "timestamp" integer NOT NULL, CONSTRAINT "PK_90783463b0d0b660367ebd7f5ff" PRIMARY KEY ("id"))`);
        await queryRunner.query(`ALTER TABLE "historical_balance" ADD CONSTRAINT "FK_383ff006e4b59db91d32cb891e9" FOREIGN KEY ("account_id") REFERENCES "account"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "entity_proof" ADD CONSTRAINT "FK_3d9cbf30c68b79a801e1d5c9b41" FOREIGN KEY ("twin_rel_id") REFERENCES "twin"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "public_ip" ADD CONSTRAINT "FK_5cc2d1af1d8132b614abd340b06" FOREIGN KEY ("farm_id") REFERENCES "farm"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "node" ADD CONSTRAINT "FK_d224b7b862841f24dd85b556059" FOREIGN KEY ("location_id") REFERENCES "location"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "node" ADD CONSTRAINT "FK_e09b744107a683dded8cac0fc6d" FOREIGN KEY ("public_config_id") REFERENCES "public_config"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "pricing_policy" ADD CONSTRAINT "FK_f980edfc333b9b0f5d041ad1f0b" FOREIGN KEY ("su_id") REFERENCES "policy"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "pricing_policy" ADD CONSTRAINT "FK_180ec5b553f153c0f4a63b610eb" FOREIGN KEY ("cu_id") REFERENCES "policy"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "pricing_policy" ADD CONSTRAINT "FK_f06c7cd7abe4b3d29683320f475" FOREIGN KEY ("nu_id") REFERENCES "policy"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "pricing_policy" ADD CONSTRAINT "FK_81934bd3c3e3a869fe597a36541" FOREIGN KEY ("ipu_id") REFERENCES "policy"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "pricing_policy" DROP CONSTRAINT "FK_81934bd3c3e3a869fe597a36541"`);
        await queryRunner.query(`ALTER TABLE "pricing_policy" DROP CONSTRAINT "FK_f06c7cd7abe4b3d29683320f475"`);
        await queryRunner.query(`ALTER TABLE "pricing_policy" DROP CONSTRAINT "FK_180ec5b553f153c0f4a63b610eb"`);
        await queryRunner.query(`ALTER TABLE "pricing_policy" DROP CONSTRAINT "FK_f980edfc333b9b0f5d041ad1f0b"`);
        await queryRunner.query(`ALTER TABLE "node" DROP CONSTRAINT "FK_e09b744107a683dded8cac0fc6d"`);
        await queryRunner.query(`ALTER TABLE "node" DROP CONSTRAINT "FK_d224b7b862841f24dd85b556059"`);
        await queryRunner.query(`ALTER TABLE "public_ip" DROP CONSTRAINT "FK_5cc2d1af1d8132b614abd340b06"`);
        await queryRunner.query(`ALTER TABLE "entity_proof" DROP CONSTRAINT "FK_3d9cbf30c68b79a801e1d5c9b41"`);
        await queryRunner.query(`ALTER TABLE "historical_balance" DROP CONSTRAINT "FK_383ff006e4b59db91d32cb891e9"`);
        await queryRunner.query(`DROP TABLE "uptime_event"`);
        await queryRunner.query(`DROP TABLE "policy"`);
        await queryRunner.query(`DROP TABLE "pricing_policy"`);
        await queryRunner.query(`DROP TABLE "node_contract"`);
        await queryRunner.query(`DROP TABLE "name_contract"`);
        await queryRunner.query(`DROP TABLE "location"`);
        await queryRunner.query(`DROP TABLE "node"`);
        await queryRunner.query(`DROP TABLE "public_config"`);
        await queryRunner.query(`DROP TABLE "farming_policy"`);
        await queryRunner.query(`DROP TABLE "farm"`);
        await queryRunner.query(`DROP TABLE "public_ip"`);
        await queryRunner.query(`DROP TABLE "entity"`);
        await queryRunner.query(`DROP TABLE "entity_proof"`);
        await queryRunner.query(`DROP TABLE "twin"`);
        await queryRunner.query(`DROP TABLE "country"`);
        await queryRunner.query(`DROP TABLE "contract_bill_report"`);
        await queryRunner.query(`DROP TABLE "consumption"`);
        await queryRunner.query(`DROP TABLE "city"`);
        await queryRunner.query(`DROP TABLE "account"`);
        await queryRunner.query(`DROP TABLE "historical_balance"`);
    }

}
